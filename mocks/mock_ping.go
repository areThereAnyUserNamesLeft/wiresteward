// Code generated by MockGen. DO NOT EDIT.
// Source: ping.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockpingCheckerInterface is a mock of pingCheckerInterface interface
type MockpingCheckerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockpingCheckerInterfaceMockRecorder
}

// MockpingCheckerInterfaceMockRecorder is the mock recorder for MockpingCheckerInterface
type MockpingCheckerInterfaceMockRecorder struct {
	mock *MockpingCheckerInterface
}

// NewMockpingCheckerInterface creates a new mock instance
func NewMockpingCheckerInterface(ctrl *gomock.Controller) *MockpingCheckerInterface {
	mock := &MockpingCheckerInterface{ctrl: ctrl}
	mock.recorder = &MockpingCheckerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockpingCheckerInterface) EXPECT() *MockpingCheckerInterfaceMockRecorder {
	return m.recorder
}

// Check mocks base method
func (m *MockpingCheckerInterface) Check() error {
	ret := m.ctrl.Call(m, "Check")
	ret0, _ := ret[0].(error)
	return ret0
}

// Check indicates an expected call of Check
func (mr *MockpingCheckerInterfaceMockRecorder) Check() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockpingCheckerInterface)(nil).Check))
}

// TargetIP mocks base method
func (m *MockpingCheckerInterface) TargetIP() string {
	ret := m.ctrl.Call(m, "TargetIP")
	ret0, _ := ret[0].(string)
	return ret0
}

// TargetIP indicates an expected call of TargetIP
func (mr *MockpingCheckerInterfaceMockRecorder) TargetIP() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TargetIP", reflect.TypeOf((*MockpingCheckerInterface)(nil).TargetIP))
}
