// Code generated by MockGen. DO NOT EDIT.
// Source: ping.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockchecker is a mock of checker interface
type Mockchecker struct {
	ctrl     *gomock.Controller
	recorder *MockcheckerMockRecorder
}

// MockcheckerMockRecorder is the mock recorder for Mockchecker
type MockcheckerMockRecorder struct {
	mock *Mockchecker
}

// NewMockchecker creates a new mock instance
func NewMockchecker(ctrl *gomock.Controller) *Mockchecker {
	mock := &Mockchecker{ctrl: ctrl}
	mock.recorder = &MockcheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockchecker) EXPECT() *MockcheckerMockRecorder {
	return m.recorder
}

// Check mocks base method
func (m *Mockchecker) Check() error {
	ret := m.ctrl.Call(m, "Check")
	ret0, _ := ret[0].(error)
	return ret0
}

// Check indicates an expected call of Check
func (mr *MockcheckerMockRecorder) Check() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*Mockchecker)(nil).Check))
}

// TargetIP mocks base method
func (m *Mockchecker) TargetIP() string {
	ret := m.ctrl.Call(m, "TargetIP")
	ret0, _ := ret[0].(string)
	return ret0
}

// TargetIP indicates an expected call of TargetIP
func (mr *MockcheckerMockRecorder) TargetIP() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TargetIP", reflect.TypeOf((*Mockchecker)(nil).TargetIP))
}
